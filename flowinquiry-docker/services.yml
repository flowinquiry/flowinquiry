# This configuration is intended for development purpose, it's **your** responsibility to harden it for production
name: flowinquiry
services:
  back-end:
    image: flowinquiry/flowinquiry-server:latest
    volumes:
      - ./volumes/storage/:/storage
    environment:
      - JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/flowinquiry
      - SPRING_DATASOURCE_USERNAME=flowinquiry
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgresql
    env_file:
      - ./.backend.env
  front-end:
    image: flowinquiry/flowinquiry-frontend:0.8.17
    environment:
      - HOSTNAME=0.0.0.0
      - AUTH_TRUST_HOST=true
      - NEXT_PUBLIC_API_URL=https://localhost
      - BACK_END_URL=http://back-end:8080
      - AUTH_SECRET=L+SFrX2ap/RFt6mi1CcHjvkNvbtw32ZhxemYbMIFeH4=
    ports:
      - '3000:3000'
    env_file:
      - ./.frontend.env
  postgresql:
    image: postgres:16.3
    volumes:
      - ./volumes/postgresql/:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=flowinquiry
      - POSTGRES_USER=flowinquiry
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}' ]
      interval: 5s
      timeout: 5s
      retries: 10
  caddy:
    container_name: caddy
    image: caddy:alpine
    restart: always
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/certificate-authority:/data/caddy/pki/authorities/local
    ports:
      - '443:443'
    extra_hosts:
      - "front-end:host-gateway"
