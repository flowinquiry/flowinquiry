name: FlowInquiry CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'apps/backend/**'
            frontend:
              - 'apps/frontend/**'
            docs:
              - 'apps/docs/**'

  backend:
    needs: detect-changes
    if: needs.detect-changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run Unit and Integration Tests
        run: |
          ./gradlew :apps:backend:server:test
          ./gradlew :apps:backend:server:integrationTest
          ./gradlew :apps:backend:server:jacocoTestReport

      - name: Generate Coverage Report Summary
        uses: danielpalme/ReportGenerator-GitHub-Action@5.4.7
        with:
          reports: apps/backend/server/build/reports/jacoco/test/jacocoTestReport.xml
          targetdir: coveragereport
          reporttypes: Html;MarkdownSummary
          classfilters: '+*'
          filefilters: '+*'

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: CoverageReport
          path: coveragereport
      - name: Show contents of coverage report folder
        run: ls -la coveragereport

      - name: Trim summary (remove class/package breakdown)
        run: |
          awk '
            BEGIN { inSummary = 0 }
            /^# Summary/ { inSummary = 1; print "# âœ… JaCoCo Backend Test Coverage Summary"; next }
            inSummary && /^$/ { print; exit }
            inSummary { print }
          ' coveragereport/Summary.md > coveragereport/TrimmedSummary.md

      - name: Add or update PR comment (Coverage Report)
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2.9.2
        with:
          header: coverage-report
          path: coveragereport/TrimmedSummary.md
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PR_COMMENT_PAT }}
      - name: Publish coverage in build summary
        run: cat coveragereport/TrimmedSummary.md >> $GITHUB_STEP_SUMMARY
        shell: bash

  frontend:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - run: pnpm install
      - name: Build the application
        working-directory: apps/frontend
        env:
          BACK_END_URL: "http://localhost:8080"
        run: pnpm build

  docs:
    needs: detect-changes
    if: needs.detect-changes.outputs.docs == 'true'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Clean .next folder
        run: rm -rf .next out
        working-directory: apps/docs
      - name: Build with Next.js
        run: pnpm next build
        working-directory: apps/docs
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/docs/out
  e2e-tests:
    needs: [ detect-changes ]
    if: needs.detect-changes.outputs.backend == 'true' || needs.detect-changes.outputs.frontend == 'true'
    uses: ./.github/workflows/playwright.yml


