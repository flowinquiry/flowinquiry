plugins {
    id "base"
    id "idea"
    id "com.gorylenko.gradle-git-properties"
    id "com.github.ben-manes.versions" version "0.51.0"
}

description = "The flexible configurable ticket management"

assert System.properties["java.specification.version"] == "21" || "22" || "23"

allprojects {
    group = 'io.flowinquiry'
    version = project.findProperty('version')
    repositories {
        mavenCentral()
    }

    subprojects {
        afterEvaluate { project ->
            if (project.plugins.hasPlugin('java') || project.plugins.hasPlugin('java-library')) {
                project.java {
                    sourceCompatibility = 21
                    targetCompatibility = 21
                }
            }

            if (project.plugins.hasPlugin('java-library')) {
                project.apply(plugin: 'maven-publish')

                project.publishing {
                    publications {
                        // Check if the publication already exists
                        if (!project.publishing.publications.names.contains("${project.name}MavenJava")) {
                            create("${project.name}MavenJava", MavenPublication) {
                                from project.components.java
                            }
                        }
                    }
                    repositories {
                        maven {
                            name = "GitHubPackages"
                            url = uri("https://maven.pkg.github.com/flowinquiry/flowinquiry-server")
                            credentials {
                                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                                password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
                            }
                        }
                    }
                }
            }
        }
    }

    gitProperties {
        failOnNoGitDirectory = false
        keys = ["git.branch", "git.commit.id.abbrev", "git.commit.id.describe"]
    }

    tasks.withType(com.gorylenko.GenerateGitPropertiesTask).configureEach {
        outputs.doNotCacheIf("Task is always executed") { true }
    }
}